{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Layout/Layout.module.css","components/Layout/Layout.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Layout","children","className","styles","layoutWrapper","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","statisticsItem","FeedbackOptions","options","onLeaveFeedback","feedbackButtons","feedbackButton","type","onClick","GOOD","NEUTRAL","BAD","Section","title","sectionWrap","sectionTitle","Notification","message","FeedbackType","App","state","handleFeedback","value","setState","prevState","Object","values","this","reduce","acc","item","positiveFeedback","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,eAAiB,qC,gBCAnCD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,eAAiB,0C,gBCA9FD,EAAOC,QAAU,CAAC,YAAc,6BAA6B,aAAe,gC,sBCA5ED,EAAOC,QAAU,CAAC,cAAgB,gC,sMCSnBC,EANA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,SAChB,OACE,yBAAKC,UAAWC,IAAOC,eAAgBH,I,gBC6B5BI,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,wBAAIR,UAAWC,IAAOQ,gBACpB,wBAAIT,UAAWC,IAAOS,gBAAtB,SACSN,GAET,wBAAIJ,UAAWC,IAAOS,gBAAtB,YACYL,GAEZ,wBAAIL,UAAWC,IAAOS,gBAAtB,QACQJ,GAER,wBAAIN,UAAWC,IAAOS,gBAAtB,UACUH,GAEV,wBAAIP,UAAWC,IAAOS,gBAAtB,sBACsBF,EADtB,O,gBCISG,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,yBAAKb,UAAWC,IAAOa,iBACrB,4BAAQd,UAAWC,IAAOc,eAAgBC,KAAK,SAASC,QAAS,kBAAMJ,EAAgBD,EAAQM,QAA/F,QACA,4BAAQlB,UAAWC,IAAOc,eAAgBC,KAAK,SAASC,QAAS,kBAAMJ,EAAgBD,EAAQO,WAA/F,WACA,4BAAQnB,UAAWC,IAAOc,eAAgBC,KAAK,SAASC,QAAS,kBAAMJ,EAAgBD,EAAQQ,OAA/F,S,gBCSSC,EAdC,SAAC,GAAyB,IAAvBtB,EAAsB,EAAtBA,SAAUuB,EAAY,EAAZA,MAC3B,OACE,yBAAKtB,UAAWC,IAAOsB,aACrB,wBAAIvB,UAAWC,IAAOuB,cAAeF,GACpCvB,ICIQ0B,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,uBAAG1B,UAAU,oBAAoB0B,ICG/BC,EAAe,CACnBT,KAAM,OACNC,QAAS,UACTC,IAAK,OAGcQ,E,2MACnBC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,eAAiB,SAAAC,GACf,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACFF,EAAQE,EAAUF,GAAS,O,oFAOlC,OADcG,OAAOC,OAAOC,KAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,K,wDAK7E,IAAMC,EAAmBJ,KAAKP,MAAMzB,KAC9BG,EAAQ6B,KAAKK,sBAAwB,EAE3C,OADmBC,KAAKC,MAAMH,EAAmBjC,EAAQ,O,+BAIjD,IAAD,EACwB6B,KAAKP,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ6B,KAAKK,qBAEnB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASnB,MAAM,yBACb,kBAAC,EAAD,CAAiBV,QAASe,EAAcd,gBAAiBuB,KAAKN,kBAGhE,kBAAC,EAAD,CAASR,MAAM,cACZf,EACC,kBAAC,EAAD,CAAYH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,mBAAoB4B,KAAKQ,oCAE3F,kBAAC,EAAD,CAAclB,QAAQ,4B,GAzCDmB,aCTjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dfa2e2e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsItem\":\"Statistics_statisticsItem__7gUz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButtons\":\"FeedbackOptions_feedbackButtons__Q9jIs\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__kGWgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionWrap\":\"Section_sectionWrap__shbVv\",\"sectionTitle\":\"Section_sectionTitle__2i8L5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutWrapper\":\"Layout_layoutWrapper__325N3\"};","import React from 'react';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout = ({ children}) => {\r\n  return (\r\n    <div className={styles.layoutWrapper}>{children}</div>\r\n  )\r\n}\r\n\r\nexport default Layout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={styles.statisticsList}>\n      <li className={styles.statisticsItem}>\n        Good: {good}\n      </li>\n      <li className={styles.statisticsItem}>\n        Neutral: {neutral}\n      </li>\n      <li className={styles.statisticsItem}>\n        Bad: {bad}\n      </li>\n      <li className={styles.statisticsItem}>\n        Total: {total}\n      </li>\n      <li className={styles.statisticsItem}>\n        Positive feedback: {positivePercentage}%\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired\n};\n\nexport default Statistics;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={styles.feedbackButtons}>\r\n      <button className={styles.feedbackButton} type=\"button\" onClick={() => onLeaveFeedback(options.GOOD)}>Good</button>\r\n      <button className={styles.feedbackButton} type=\"button\" onClick={() => onLeaveFeedback(options.NEUTRAL)}>Neutral</button>\r\n      <button className={styles.feedbackButton} type=\"button\" onClick={() => onLeaveFeedback(options.BAD)}>Bad</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    GOOD: PropTypes.string,\r\n    NEUTRAL: PropTypes.string,\r\n    BAD: PropTypes.string\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <div className={styles.sectionWrap}>\r\n      <h2 className={styles.sectionTitle}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <p className=\"NotificationWrap\">{message}</p>\r\n  )\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\n\nimport Layout from './Layout';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification';\n\nconst FeedbackType = {\n  GOOD: 'good',\n  NEUTRAL: 'neutral',\n  BAD: 'bad'\n}\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  handleFeedback = value => {\n    this.setState(prevState => {\n      return (\n        { [value]: prevState[value] + 1 }\n      );\n    })\n  }\n\n  countTotalFeedback() {\n    const total = Object.values(this.state).reduce((acc, item) => (acc += item), 0);\n    return total;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const positiveFeedback = this.state.good;\n    const total = this.countTotalFeedback() || 1;\n    const percentage = Math.round(positiveFeedback / total * 100);\n    return percentage;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n\n    return (\n      <Layout>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={FeedbackType} onLeaveFeedback={this.handleFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total ?\n            <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={this.countPositiveFeedbackPercentage()} />\n            :\n            <Notification message=\"No feedback given\" />\n          }\n        </Section>\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}